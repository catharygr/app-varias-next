.h2 {
  text-align: center;
  margin: 4rem auto;
}

.flexContainer {
  display: flex;
  flex-direction: row;
  flex-wrap: wrap;
  justify-content: flex-start;
  align-items: flex-end;
  align-content: space-between;
  gap: 1rem;
  width: 80vw;
  /* height: 80vh; */
  margin: 5vh auto;
  outline: 1px solid red;
}

.flexContainer > * {
  background-color: aqua;
  /* flex-grow: 1; */
  /* flex-shrink: 1; */
  /* flex-basis: 20vw; */
  flex: 1 1 150px;
  /* width: 20vw; */
  height: 150px;
  /* Convierto hijos a padre */
  display: flex;
  justify-content: center;
  align-items: center;
  font-size: 3rem;
}
.big {
  /* font-size: 10rem; */
  /* order: -1; */
  /* flex-grow: 10;
  flex-shrink: 0; */
  /* align-self: flex-start; */
}

.gridContainer {
  /* gap: 1rem; */
  width: 80vw;
  margin: 0 auto;
  outline: 1px solid red;
  display: grid;
  grid-template-columns: 50px 1fr 1fr 50px;
  grid-template-rows: auto 100px 300px 100px;
  grid-template-areas:
    "borders header header border"
    "borders vacio vacio border"
    "borders main foto border"
    "borders footer foto border";
  /* justify-items: end; */
  /* align-items: center; */
  /* place-items: center end; */
  /* grid-auto-columns: 100px; */
  /* grid-auto-flow: row; */
  /* justify-content: space-between; */
}
.gridContainer > * {
  color: white;
  padding: 2rem;
  font-size: 3rem;
  /* width: 100px; */
  /* height: 200px; */
  background-color: blueviolet;
  display: flex;
  justify-content: center;
  align-items: center;
}

.uno {
  grid-area: header;
  background-color: rosybrown;
}

.tres {
  grid-area: main;
  background-color: blue;
}
.siete {
  grid-area: foto;
  background-color: green;
  /* grid-column: 1 / 4;
  grid-row: 2 / 3; */
}

.ocho {
  grid-area: footer;
  background-color: blueviolet;
  grid-column: 1 / -1;
  grid-row: 2 / 4;
  z-index: -1;
}

/* justify-content y align content solamente se usa si la suma de todas las columnas o filas es menor que la anchura del grid container. Eso suele ocurrir si las columnas o filas estan expresadas en px o rem */

/* place-items es justify y align items juntos */
